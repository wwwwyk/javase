类和对象
  类是抽象的一个东西
  对象是实实在在的一个东西
  类可以生成对象，类是对象的抽象，对象是类的实例化
  
对象：用来描述客观事物的一个实体，由一组属性和斱法构成
对象的特征——属性
  每个对象的每个属性都拥有特定值
对象的特征——方法
  方法——对象执行的操作

所有类定义的时候可以添加属性和方法，但是不是必须要写的
一个java文件中可以定义多个class，但是只能有一个public class并且 
属性：
   语法：
   [访问修饰符]    数据类型      属性名称  =  值；

   注意：
       定义属性的时候可以有值也可以没有值
       必须要包含类型和名称


方法：表示行为
   语法：
       [访问修饰符]  返回值类型(任何类型)  方法名称（形参列表）{
               逻辑代码

       }
   注意：
       1、方法的访问修饰符可以不写
       2、方法可以有返回值，也可以没有，void表示没有返回值的意思
       3、形参列表可以有，也可以没有
       4、java中方法的传参都是值传递

 对象的创建和使用
       1、使用new关键字来创建对象
       ClassName objectName = new ClassName();
       2、对象的使用
       使用对象的时候可以通过 对象名称.属性 或者 对象名称.方法 来使用属性和方法


this关键字：
表示当前对象本身，当前对象的引用
作用：
1.构造方法：在构造方法参数名称和类的成员变量名称一致时，this指代当前对象
当构造方法需要调用其他构造方法的时候，使用this(参数)调用其他方法，必须位于第一行
2.普通方法：多个方法之间调用，指的是当前对象其他方法
3.成员变量：当方法中的参数名称跟成员变量保持一致的时候，使用this,表示对象的值，不用则是形参的值。


static关键字（一旦被修饰，属于类）
1.修饰成员变量的时候，表示静态成员变量或者叫类变量
可以直接被类名使用
2.修饰方法的时候，表示静态方法
可以使用类名或者对象名直接使用
注意：
1.静态变量，在创建之前被初始化，或者说在类被载入之前初始化
2.属于公共变量，对象和类都可以使用，推荐使用类调用
3.成员变量放在堆中，静态变量放在方法区中的静态区
4.静态变量不能被定义在方法内
5.静态方法可以在非静态方法中直接调用
6.静态方法中不能直接调用非静态方法
7.静态方法 中不允许是出现this调用
8.一般工具类中的方法定义为static

代码块
使用“{}”括起来的一段代码
1.普通代码块:定义在方法或者语句中
2.构造代码块:定义在类中
注意:每次运行都将代码块中的代码添加到构造方法前面
 构造代码块中的代码会添加到每一个构造方法中，当使用this(参数)的时候不添加
3.静态代码块：在static{}中的代码，在程序载入时优先执行 
在数据库连接等使用
4.同步代码块:多线程使用，共享空间进行加锁操作

执行优先级：静态>构造（创建对象使用）>普通


Package（包，多级目录）
作用：
1.决文件重名问题
2.方便管理类，相同特征的功能代码放同一目录下
使用：
一般放在JAVA文件第一行
格式：package 域名的倒写
完全限定名：包名+类名

JDK常用包：
lang:不需要导入，自动加载
util:工具包
net:网络包
io:输入输出流包

Import导包
若不使用import,在使用每个类时必须要将类的完全限定名都加上才可以使用，太过于繁琐
import  java.包名.类名
注意：需要使用多个同名的类的时候，只能导入一个，多的使用完全限定名

静态导包：
当使用某个类多个方法时，又不想频繁写该类名城，此时可以静态导包，直接使用方法。
import ststic java.lang.Math.*;

封装：（将属性设置为私有属性，提供共有的外部方法程序进行调用）
将类的某些信息隐藏在类的内部，不允许外部程序直接访问，通过方法实现操作
解决在赋值时添加逻辑判断，保证数据规范。
好处：
隐藏类的内部细节
只能通过提供的方法进行访问
可以根据需求添加复杂的 判断语句
方便修改实现
步骤：
1.设为private
2.创建get/set方法
3。get/set加入控制语句


访问修饰符：
成员（成员变量和成员方法）的访问权限，构造方法也可以用（单例设计模式）
从大到小进行排列
-public公共的
当前项目所有类都可以访问
-protected受保护的
当前类，当前包，当前子类可以访问
-defalut默认的
当前类，当钱包可以访问访问
-private私有的
当前类可以访问
类的访问权限
-public公共的
同一项目所有类可以访问
-default默认的
可被同一个包中类访问

方法调用中参数传递（相当于局部变量）
方法中的参数列表叫做形式参数，没有具体的值，只是为了在方法中方便使用
调用方法时实际传入的值叫实际参数，代表具体的数值，用来替换在方法体中代码逻辑的值进行运算
注意：
1.形式参数的变量名称也是局部变量
2.当方法的参数值是基本数据类型时，不会改变原来的值
3.当方法参数类型是引用类型时，如果改变了该引用类型的值，会改变原来对象的值
java中参数传递是值传递
 
 变量：
   局部变量：
       定义在方法中的变量称之为局部变量
           作用域：从定义的位置开始到整个方法结束
           局部变量不包含默认值，如果没有使用当前变量的话，可以不赋值
           注意：局部变量只能在当前方法中使用，其他地方无法使用
   成员变量：
       定义在方法外，类内的变量叫做成员变量（全局变量）
       成员变量包含初始值：int 0 String null boolean false
           作用域：整个类体内
栈：
– 存放：局部变量
– 先迚后出，自下而上存储
– 方法执行完毕，自动释放空间
堆：
– 存放new出来的对象
– 需要垃圾回收器来回收:System.gc()
方法区：
– 存放：类的信息(代码)、 static变量、字符串常量等.

